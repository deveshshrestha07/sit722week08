name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      product_api_url:
        description: "Product API base URL (e.g., http://X.X.X.X:8000)"
        required: true
        default: "http://<ip_address>:8000"
      order_api_url:
        description: "Order API base URL (e.g., http://Y.Y.Y.Y:8001)"
        required: true
        default: "http://<ip_address>:8001"
      aks_cluster_name:
        description: "AKS cluster name"
        required: true
        default: "aks-sit722-08"
      aks_resource_group:
        description: "AKS resource group"
        required: true
        default: "rg-sit722-08"
      image_tag:
        description: "Frontend image tag to build/push/deploy"
        required: true
        default: "manual"

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    env:
      # Set these as repo Variables (Settings → Secrets and variables → Variables)
      ACR_NAME: sit722acr27253
      ACR_LOGIN_SERVER: ${{ vars.AZURE_ACR_LOGIN_SERVER }} # e.g., sit722acr27253.azurecr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: ✅ Validate AZURE_CREDENTIALS
        if: ${{ !secrets.AZURE_CREDENTIALS }}
        run: |
          echo "AZURE_CREDENTIALS secret is missing." >&2
          exit 1

      - name: Azure login (Service Principal JSON)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: az acr login --name "$ACR_NAME"

      - name: Inject backend URLs into frontend/main.js
        shell: bash
        run: |
          set -euo pipefail
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_url }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_url }}|g"     frontend/main.js
          echo "---- main.js (after) ----"
          nl -ba frontend/main.js | sed -n '1,120p'

      - name: Build & Push frontend image
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ inputs.image_tag }}"
          docker build -t "$ACR_LOGIN_SERVER/frontend:$TAG" ./frontend
          docker push "$ACR_LOGIN_SERVER/frontend:$TAG"

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name:   ${{ inputs.aks_cluster_name }}

      - name: Deploy frontend manifest
        shell: bash
        run: |
          set -euo pipefail
          kubectl apply -f k8s/frontend.yaml

      - name: Update image & rollout
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ inputs.image_tag }}"
          # EDIT if your deployment/container names differ:
          DEPLOY=frontend-deploy
          CONTAINER=frontend
          kubectl set image deployment/$DEPLOY $CONTAINER="$ACR_LOGIN_SERVER/frontend:$TAG" --record
          kubectl rollout status deployment/$DEPLOY --timeout=300s
          kubectl get deploy,po,svc -o wide

      - name: Logout
        run: az logout
